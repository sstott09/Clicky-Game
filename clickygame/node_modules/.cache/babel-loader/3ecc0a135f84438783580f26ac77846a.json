{"ast":null,"code":"import _objectSpread from\"/Users/stevenstott/DU/Code_Boot_Camp/Homework/Clicky-Game/clickygame/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/stevenstott/DU/Code_Boot_Camp/Homework/Clicky-Game/clickygame/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/stevenstott/DU/Code_Boot_Camp/Homework/Clicky-Game/clickygame/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/stevenstott/DU/Code_Boot_Camp/Homework/Clicky-Game/clickygame/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/stevenstott/DU/Code_Boot_Camp/Homework/Clicky-Game/clickygame/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/stevenstott/DU/Code_Boot_Camp/Homework/Clicky-Game/clickygame/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import ImgCard from'./ImgCard';import Nav from'./Nav';import data from'../data.json';var Game=/*#__PURE__*/function(_Component){_inherits(Game,_Component);function Game(){var _getPrototypeOf2;var _this;_classCallCheck(this,Game);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Game)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={data:data,score:0,topScore:0};_this.shuffleCards=function(data){var i=data.length-1;while(i>0){var randomNum=Math.floor(Math.random()*data.length);var temp=data[i];data[i]=data[randomNum];data[randomNum]=temp;i--;}return data;};_this.handleClick=function(id){var guessedCorrectly=false;var newImageCards=_this.state.data.map(function(image){var newImage=_objectSpread({},image);if(newImage.id===id){if(!newImage.clicked){newImage.clicked=true;guessedCorrectly=true;}}return newImage;});guessedCorrectly?_this.correctGuess(newImageCards):_this.incorrectGuess(newImageCards);};_this.correctGuess=function(data){console.log(\"correct guess\");var newScore=_this.state.score+1;var newTopScore=Math.max(newScore,_this.state.topScore);_this.setState({score:newScore,topScore:newTopScore,data:_this.shuffleCards(data)});};_this.incorrectGuess=function(data){console.log(\"incorrect guess\");_this.setState({data:_this.resetData(data),score:0});};_this.resetData=function(data){var resetData=data.map(function(item){return _objectSpread({},item,{clicked:false});});return _this.shuffleCards(resetData);};return _this;}_createClass(Game,[{key:\"componentDidMount\",value:function componentDidMount(){this.setState({data:this.shuffleCards(this.state.data)});}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",null,React.createElement(Nav,{score:this.state.score,topScore:this.state.topScore}),React.createElement(\"div\",null,this.state.data.map(function(image){return React.createElement(ImgCard,{key:image.id,id:image.id,image:image.image,handleImageClick:_this2.handleClick});})));}}]);return Game;}(Component);export default Game;","map":{"version":3,"sources":["/Users/stevenstott/DU/Code_Boot_Camp/Homework/Clicky-Game/clickygame/src/components/Game.js"],"names":["React","Component","ImgCard","Nav","data","Game","state","score","topScore","shuffleCards","i","length","randomNum","Math","floor","random","temp","handleClick","id","guessedCorrectly","newImageCards","map","image","newImage","clicked","correctGuess","incorrectGuess","console","log","newScore","newTopScore","max","setState","resetData","item"],"mappings":"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","sourcesContent":["import React,{ Component } from  \"react\";\nimport ImgCard from './ImgCard';\nimport Nav from './Nav';\nimport data from '../data.json';\n\nclass Game extends Component{\n    state ={\n        data,\n        score: 0,\n        topScore: 0\n    }\n    componentDidMount(){\n        this.setState({\n            data: this.shuffleCards(this.state.data)\n        })\n    }\n    shuffleCards = (data) => {\n        let i = data.length-1;\n        while(i>0){\n            const randomNum = Math.floor(Math.random()* (data.length))\n            const temp = data[i];\n            data[i] = data[randomNum];\n            data[randomNum] = temp;\n            i--;\n        }\n        return data;\n    }\n    handleClick = (id) => {\n        let guessedCorrectly = false;\n        const newImageCards = this.state.data.map((image) => {\n            const newImage = {...image}\n            if(newImage.id === id){\n                if(!newImage.clicked){\n                    newImage.clicked= true;\n                    guessedCorrectly = true;\n                }\n            }\n            return newImage\n        });\n        guessedCorrectly ? this.correctGuess(newImageCards) : this.incorrectGuess(newImageCards)\n    }\n    correctGuess = (data) => {\n        console.log(\"correct guess\")\n        const newScore = this.state.score + 1;\n        const newTopScore = Math.max(newScore, this.state.topScore);\n        this.setState({\n            score: newScore,\n            topScore: newTopScore,\n            data: this.shuffleCards(data)\n        })\n\n    }\n    incorrectGuess = (data) => {\n        console.log(\"incorrect guess\")\n        this.setState({\n            data: this.resetData(data),\n            score: 0\n        })\n    }\n    resetData = data => {\n        const resetData = data.map(item => ({\n            ...item, clicked: false\n        }))\n        return this.shuffleCards(resetData)\n    }\n    render(){\n        return(\n            <div>\n                    <Nav score={this.state.score} topScore = {this.state.topScore} />\n                    <div>\n                        {this.state.data.map(image => (\n                            <ImgCard \n                                key= {image.id}\n                                id= {image.id}\n                                image= {image.image}\n                                handleImageClick= {this.handleClick}\n                            />\n                        ))}\n                    </div>\n            </div>\n            \n           \n        )\n    }\n}\nexport default Game;"]},"metadata":{},"sourceType":"module"}